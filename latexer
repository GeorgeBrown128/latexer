#!/bin/bash -u

# Script assumes file fits n.3 convention, so check that the filename is
# OK before proceeding.
if [[ ${1: -4} != ".tex" ]]; then
    echo -e "\033[91mScript requires a .tex file!\0330m"
    exit 1
fi

# Check source file is accessable.
if [[ -f $1 ]]; then
    echo -e "\033[92m[ $(date +%H:%M:%S) ] Using file $1\033[0m"
else
    echo -e "\033[91mFile does't exist!\033[0m"
    exit 1
fi

# Create a temp directory to hold all of the stuff.
workdir=$(mktemp -d)

# Store file name and directory variables.
file=${1%%.*}
dir=`dirname ${1}`

echo Working in ${workdir}

# Startup message.
echo -e "\033[92m[ $(date +%H:%M:%S) ] latexter started.\033[0m"

# Set lastmod to 0 so that we always render on launch.
lastmod=0
# Flag to decide if we should open the pdf.
opened=0

function compile {
        pdflatex -halt-on-error -shell-escape -interaction=nonstopmode \
        -file-line-error -output-directory $1 $2 | tail -n 10
        texcount $2
}

while true; do
    # Get last modifcaion of directory.
    mod=$(stat -f '%m' ${dir})
    # Check if the file has been modified.
    if [[ mod -gt lastmod ]]; then
        # Copy the source, and tell minted to work in this directory.
        sed "s|__OUTPUTDIR__|outputdir=${workdir}|g" ${1} > ${workdir}/${1}
        echo -e "\033[93m[ $(date +%H:%M:%S) ] Generating PDF\033[0m".
        compile ${workdir} ${1}
        # Open the PDF if it hasn't been opened, and is available.
        if [[ opened -eq 0 && -r ${workdir}/${file}.pdf ]]
        then
            # Rebuild for object references.
            compile ${workdir} ${1}
            xdg-open ${workdir}/${file}.pdf > /dev/null 2>&1 &
            opened=1
        fi
        if [[ -r ${workdir}/${file}.pdf ]]; then
            cp ${workdir}/${file}.pdf .
            echo -e "\033[92m[ $(date +%H:%M:%S) ] Done!\033[0m"
        else
            echo -e "\033[91m[ $(date +%H:%M:%S) ] Compilation Failed with Error:\033[0m"
            cat ${workdir}/${file}.log | grep -A 2 "${workdir}/${1}:.*:"
        fi
    fi
    lastmod=${mod}
    sleep 1
done
